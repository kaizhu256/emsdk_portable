# This is the CMakeCache file.
# For build in directory: /tmp/emsdk_portable/clang/fastcomp/build_master_64
# It was generated by CMake: /usr/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Default URL where bug reports are to be submitted.
BUG_REPORT_URL:STRING=http://llvm.org/bugs/

//Build clang-format VS plugin
BUILD_CLANG_FORMAT_VS_PLUGIN:BOOL=OFF

//Build all libraries as shared libraries instead of static
BUILD_SHARED_LIBS:BOOL=OFF

//Dependencies for target
BugpointPasses_LIB_DEPENDS:STATIC=

//Build CLANG example programs by default.
CLANG_BUILD_EXAMPLES:BOOL=OFF

//Build ARCMT.
CLANG_ENABLE_ARCMT:BOOL=ON

//Build static analyzer.
CLANG_ENABLE_STATIC_ANALYZER:BOOL=ON

//Version number that will be placed into the clang executable,
// in the form XX.YY
CLANG_EXECUTABLE_VERSION:STRING=3.7

//Generate build targets for the Clang docs.
CLANG_INCLUDE_DOCS:BOOL=ON

//No help, variable specified on the command line.
CLANG_INCLUDE_EXAMPLES:UNINITIALIZED=OFF

//Generate build targets for the Clang unit tests.
CLANG_INCLUDE_TESTS:BOOL=OFF

//Order file to use when compiling clang in order to improve startup
// time.
CLANG_ORDER_FILE:FILEPATH=

//Build clang with plugin support
CLANG_PLUGIN_SUPPORT:BOOL=ON

//Vendor-specific text for showing the repository the source is
// taken from.
CLANG_REPOSITORY_STRING:STRING=

//Relative directory from the Clang binary to its resource files.
CLANG_RESOURCE_DIR:STRING=

//Native TableGen executable. Saves building one when cross-compiling.
CLANG_TABLEGEN:STRING=clang-tblgen

//Vendor-specific text for showing with version information.
CLANG_VENDOR:STRING=

//Vendor-specific uti.
CLANG_VENDOR_UTI:STRING=org.llvm.clang

//Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/ar

//Choose the type of build, options are: None(CMAKE_CXX_FLAGS or
// CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.
CMAKE_BUILD_TYPE:STRING=Release

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=/usr/bin/c++

//Flags used by the compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//C compiler
CMAKE_C_COMPILER:FILEPATH=/usr/bin/cc

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=OFF

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Path to a program.
CMAKE_LINKER:FILEPATH=/usr/bin/ld

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/usr/bin/objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/usr/bin/objdump

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=LLVM

//Path to a program.
CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/usr/bin/strip

//If true, cmake will use relative paths in makefiles and projects.
CMAKE_USE_RELATIVE_PATHS:BOOL=OFF

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Enable to build Debian packages
CPACK_BINARY_DEB:BOOL=OFF

//Enable to build IFW packages
CPACK_BINARY_IFW:BOOL=OFF

//Enable to build NSIS packages
CPACK_BINARY_NSIS:BOOL=OFF

//Enable to build RPM packages
CPACK_BINARY_RPM:BOOL=OFF

//Enable to build STGZ packages
CPACK_BINARY_STGZ:BOOL=ON

//Enable to build TBZ2 packages
CPACK_BINARY_TBZ2:BOOL=OFF

//Enable to build TGZ packages
CPACK_BINARY_TGZ:BOOL=ON

//Enable to build TXZ packages
CPACK_BINARY_TXZ:BOOL=OFF

//Enable to build TZ packages
CPACK_BINARY_TZ:BOOL=ON

//Enable to build TBZ2 source packages
CPACK_SOURCE_TBZ2:BOOL=ON

//Enable to build TGZ source packages
CPACK_SOURCE_TGZ:BOOL=ON

//Enable to build TXZ source packages
CPACK_SOURCE_TXZ:BOOL=ON

//Enable to build TZ source packages
CPACK_SOURCE_TZ:BOOL=ON

//Enable to build ZIP source packages
CPACK_SOURCE_ZIP:BOOL=OFF

//Colon separated list of directories clang will search for headers.
C_INCLUDE_DIRS:STRING=

//Default <path> to all compiler invocations for --sysroot=<path>.
DEFAULT_SYSROOT:PATH=

//Path to a library.
DL_LIBRARY_PATH:FILEPATH=/usr/lib/x86_64-linux-gnu/libdl.so

//Additional directory, where CMake should search for ffi.h or
// ffi/ffi.h
FFI_INCLUDE_DIR:PATH=

//Additional directory, where CMake should search for libffi.so
FFI_LIBRARY_DIR:PATH=

//Directory where gcc is installed.
GCC_INSTALL_PREFIX:PATH=

//The gold linker
GOLD_EXECUTABLE:FILEPATH=/usr/bin/ld.gold

//go executable
GO_EXECUTABLE:FILEPATH=GO_EXECUTABLE-NOTFOUND

//Build libclang as a static library (in addition to a shared one)
LIBCLANG_BUILD_STATIC:BOOL=OFF

//Version number that will be placed into the libclang library
// , in the form XX.YY
LIBCLANG_LIBRARY_VERSION:STRING=3.7

//Path to a file.
LIBXML2_INCLUDE_DIR:PATH=LIBXML2_INCLUDE_DIR-NOTFOUND

//Path to a library.
LIBXML2_LIBRARIES:FILEPATH=LIBXML2_LIBRARIES-NOTFOUND

//Path to a program.
LIBXML2_XMLLINT_EXECUTABLE:FILEPATH=LIBXML2_XMLLINT_EXECUTABLE-NOTFOUND

//Static link Polly into tools
LINK_POLLY_INTO_TOOLS:BOOL=OFF

//Dependencies for target
LLVMAnalysis_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMAsmParser_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMAsmPrinter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMBitReader_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMBitWriter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMCodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMCore_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMDebugInfoDWARF_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMDebugInfoPDB_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMExecutionEngine_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMHello_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMIRReader_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMInstCombine_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMInstrumentation_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMInterpreter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMJSBackendCodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMJSBackendDesc_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMJSBackendInfo_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMLTO_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMLineEditor_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMLinker_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMCDisassembler_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMCJIT_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMCParser_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMC_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMinSFITransforms_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMNaClAnalysis_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMNaClBitAnalysis_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMNaClBitReader_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMNaClBitTestUtils_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMNaClBitWriter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMNaClTransforms_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMObjCARCOpts_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMObject_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMOption_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMOrcJIT_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMPasses_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMProfileData_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMRuntimeDyld_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMScalarOpts_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMSelectionDAG_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMSupport_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMTableGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMTarget_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMTransformUtils_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMVectorize_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86AsmParser_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86AsmPrinter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86CodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86Desc_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86Disassembler_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86Info_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86Utils_LIB_DEPENDS:STATIC=

//Enable abi-breaking checks.  Can be WITH_ASSERTS, FORCE_ON or
// FORCE_OFF.
LLVM_ABI_BREAKING_CHECKS:STRING=WITH_ASSERTS

//Append the version control system revision id to LLVM version
LLVM_APPEND_VC_REV:BOOL=OFF

//Value Computed by CMake
LLVM_BINARY_DIR:STATIC=/tmp/emsdk_portable/clang/fastcomp/build_master_64

//PATH to binutils/include containing plugin-api.h for gold plugin.
LLVM_BINUTILS_INCDIR:PATH=

//Build 32 bits executables and libraries.
LLVM_BUILD_32_BITS:BOOL=OFF

//Build the llvm documentation.
LLVM_BUILD_DOCS:BOOL=OFF

//Build the LLVM example programs. If OFF, just generate build
// targets.
LLVM_BUILD_EXAMPLES:BOOL=OFF

//Build compiler-rt as an external project.
LLVM_BUILD_EXTERNAL_COMPILER_RT:BOOL=OFF

//Build libllvm dynamic library
LLVM_BUILD_LLVM_DYLIB:BOOL=OFF

//Build the LLVM runtime libraries.
LLVM_BUILD_RUNTIME:BOOL=ON

//Build LLVM unit tests. If OFF, just generate build targets.
LLVM_BUILD_TESTS:BOOL=OFF

//Build the LLVM tools. If OFF, just generate build targets.
LLVM_BUILD_TOOLS:BOOL=ON

//Default target for which LLVM will generate code.
LLVM_DEFAULT_TARGET_TRIPLE:STRING=x86_64-unknown-linux-gnu

//Disable llvm-shlib's atexit destructors.
LLVM_DISABLE_LLVM_DYLIB_ATEXIT:BOOL=ON

//Export all symbols from libLLVM.dylib (default is C API only
LLVM_DYLIB_EXPORT_ALL:BOOL=OFF

//Enable assertions
LLVM_ENABLE_ASSERTIONS:BOOL=OFF

//Enable embedding backtraces on crash.
LLVM_ENABLE_BACKTRACES:BOOL=ON

//Enable crash overrides.
LLVM_ENABLE_CRASH_OVERRIDES:BOOL=ON

//Compile with C++1y enabled.
LLVM_ENABLE_CXX1Y:BOOL=OFF

//Use doxygen to generate llvm API documentation.
LLVM_ENABLE_DOXYGEN:BOOL=OFF

//Enable Exception handling
LLVM_ENABLE_EH:BOOL=OFF

//Use libffi to call external functions from the interpreter
LLVM_ENABLE_FFI:BOOL=OFF

//Use libc++ if available.
LLVM_ENABLE_LIBCXX:BOOL=OFF

//Use libc++abi when using libc++.
LLVM_ENABLE_LIBCXXABI:BOOL=OFF

//Compile with C++ modules enabled.
LLVM_ENABLE_MODULES:BOOL=OFF

//Compile with pedantic enabled.
LLVM_ENABLE_PEDANTIC:BOOL=ON

//Build Position-Independent Code
LLVM_ENABLE_PIC:BOOL=ON

//Enable run time type information
LLVM_ENABLE_RTTI:BOOL=OFF

//Use Sphinx to generate llvm documentation.
LLVM_ENABLE_SPHINX:BOOL=OFF

//Use terminfo database if available.
LLVM_ENABLE_TERMINFO:BOOL=ON

//Use threads if available.
LLVM_ENABLE_THREADS:BOOL=ON

//Enable embedding timestamp information in build
LLVM_ENABLE_TIMESTAMPS:BOOL=ON

//Enable compiler warnings.
LLVM_ENABLE_WARNINGS:BOOL=ON

//Fail and stop if a warning is triggered.
LLVM_ENABLE_WERROR:BOOL=OFF

//Use zlib for compression/decompression if available.
LLVM_ENABLE_ZLIB:BOOL=ON

//Semicolon-separated list of experimental targets to build.
LLVM_EXPERIMENTAL_TARGETS_TO_BUILD:STRING=

//Whether to build clang as part of LLVM
LLVM_EXTERNAL_CLANG_BUILD:BOOL=ON

//Path to clang source directory
LLVM_EXTERNAL_CLANG_SOURCE_DIR:PATH=/tmp/emsdk_portable/clang/fastcomp/src/tools/clang

//Path to clang-tools-extra source directory
LLVM_EXTERNAL_CLANG_TOOLS_EXTRA_SOURCE_DIR:PATH=/tmp/emsdk_portable/clang/fastcomp/src/tools/clang/tools/extra

//Path to compiler-rt source directory
LLVM_EXTERNAL_COMPILER_RT_SOURCE_DIR:PATH=/tmp/emsdk_portable/clang/fastcomp/src/projects/compiler-rt

//Path to dragonegg source directory
LLVM_EXTERNAL_DRAGONEGG_SOURCE_DIR:PATH=/tmp/emsdk_portable/clang/fastcomp/src/projects/dragonegg

//Path to libcxxabi source directory
LLVM_EXTERNAL_LIBCXXABI_SOURCE_DIR:PATH=/tmp/emsdk_portable/clang/fastcomp/src/projects/libcxxabi

//Path to libcxx source directory
LLVM_EXTERNAL_LIBCXX_SOURCE_DIR:PATH=/tmp/emsdk_portable/clang/fastcomp/src/projects/libcxx

//Path to lldb source directory
LLVM_EXTERNAL_LLDB_SOURCE_DIR:PATH=/tmp/emsdk_portable/clang/fastcomp/src/tools/lldb

//Path to lld source directory
LLVM_EXTERNAL_LLD_SOURCE_DIR:PATH=/tmp/emsdk_portable/clang/fastcomp/src/tools/lld

//Path to llgo source directory
LLVM_EXTERNAL_LLGO_SOURCE_DIR:PATH=/tmp/emsdk_portable/clang/fastcomp/src/tools/llgo

//Whether to build msbuild as part of LLVM
LLVM_EXTERNAL_MSBUILD_BUILD:BOOL=ON

//Path to msbuild source directory
LLVM_EXTERNAL_MSBUILD_SOURCE_DIR:PATH=/tmp/emsdk_portable/clang/fastcomp/src/tools/msbuild

//Path to subzero source directory
LLVM_EXTERNAL_SUBZERO_SOURCE_DIR:PATH=/tmp/emsdk_portable/clang/fastcomp/src/tools/subzero

//Set to ON to force using an old, unsupported host toolchain.
LLVM_FORCE_USE_OLD_HOST_TOOLCHAIN:BOOL=OFF

//Host on which LLVM binaries will run
LLVM_HOST_TRIPLE:STRING=x86_64-unknown-linux-gnu

//Generate build targets for llvm documentation.
LLVM_INCLUDE_DOCS:BOOL=ON

//Generate build targets for the LLVM examples
LLVM_INCLUDE_EXAMPLES:BOOL=OFF

//Generate build targets for the LLVM unit tests.
LLVM_INCLUDE_TESTS:BOOL=OFF

//Generate build targets for the LLVM tools.
LLVM_INCLUDE_TOOLS:BOOL=ON

//Generate build targets for the LLVM utils.
LLVM_INCLUDE_UTILS:BOOL=ON

//Only include toolchain files in the 'install' target.
LLVM_INSTALL_TOOLCHAIN_ONLY:BOOL=OFF

//Include utility binaries in the 'install' target.
LLVM_INSTALL_UTILS:BOOL=OFF

//Define suffix of library directory name (32/64)
LLVM_LIBDIR_SUFFIX:STRING=

//Default options for lit
LLVM_LIT_ARGS:STRING=-sv

//Force TableGen to be built with optimization
LLVM_OPTIMIZED_TABLEGEN:BOOL=OFF

//Define the maximum number of concurrent compilation jobs.
LLVM_PARALLEL_COMPILE_JOBS:STRING=

//Define the maximum number of concurrent link jobs.
LLVM_PARALLEL_LINK_JOBS:STRING=

//Value Computed by CMake
LLVM_SOURCE_DIR:STATIC=/tmp/emsdk_portable/clang/fastcomp/src

//Native TableGen executable. Saves building one when cross-compiling.
LLVM_TABLEGEN:STRING=llvm-tblgen

//Semicolon-separated list of targets to build, or "all".
LLVM_TARGETS_TO_BUILD:STRING=X86;JSBackend

//Set target to use for LLVM JIT or use "host" for automatic detection.
LLVM_TARGET_ARCH:STRING=host

//Enable solution folders in Visual Studio. Disable for Express
// versions.
LLVM_USE_FOLDERS:BOOL=ON

//Use Intel JIT API to inform Intel(R) VTune(TM) Amplifier XE 2011
// about JIT code
LLVM_USE_INTEL_JITEVENTS:BOOL=OFF

//Use opagent JIT interface to inform OProfile about JIT code
LLVM_USE_OPROFILE:BOOL=OFF

//Define the sanitizer used to build binaries and tests.
LLVM_USE_SANITIZER:STRING=

//Use -gsplit-dwarf when compiling llvm.
LLVM_USE_SPLIT_DWARF:BOOL=OFF

//Dependencies for target
LLVMipa_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMipo_LIB_DEPENDS:STATIC=

//Dependencies for the target
LTO_LIB_DEPENDS:STATIC=general;LLVMX86CodeGen;general;LLVMX86AsmPrinter;general;LLVMX86AsmParser;general;LLVMX86Desc;general;LLVMX86Info;general;LLVMX86Disassembler;general;LLVMJSBackendCodeGen;general;LLVMJSBackendDesc;general;LLVMJSBackendInfo;general;LLVMCore;general;LLVMLTO;general;LLVMMC;general;LLVMMCDisassembler;general;LLVMNaClTransforms;general;LLVMSupport;

//Path to a program.
OCAMLFIND:FILEPATH=OCAMLFIND-NOTFOUND

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=PKG_CONFIG_EXECUTABLE-NOTFOUND

//Path to a program.
PYTHON_EXECUTABLE:FILEPATH=/usr/bin/python2.7

//Dependencies for target
PrintFunctionNames_LIB_DEPENDS:STATIC=

//Semicolon-separated list of targets to build, or "none".
SUBZERO_TARGETS_TO_BUILD:STRING=none

//Use ccache for building
SYSTEM_HAS_CCACHE:BOOL=OFF

//Dependencies for target
SampleAnalyzerPlugin_LIB_DEPENDS:STATIC=

//Plist name
TOOL_INFO_PLIST:STRING=Info.plist

//Build LLVM with Polly
WITH_POLLY:BOOL=ON

//Dependencies for target
clangARCMigrate_LIB_DEPENDS:STATIC=

//Dependencies for target
clangASTMatchers_LIB_DEPENDS:STATIC=

//Dependencies for target
clangAST_LIB_DEPENDS:STATIC=

//Dependencies for target
clangAnalysis_LIB_DEPENDS:STATIC=

//Dependencies for target
clangBasic_LIB_DEPENDS:STATIC=

//Dependencies for target
clangCodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
clangDriver_LIB_DEPENDS:STATIC=

//Dependencies for target
clangDynamicASTMatchers_LIB_DEPENDS:STATIC=

//Dependencies for target
clangEdit_LIB_DEPENDS:STATIC=

//Dependencies for target
clangFormat_LIB_DEPENDS:STATIC=

//Dependencies for target
clangFrontendTool_LIB_DEPENDS:STATIC=

//Dependencies for target
clangFrontend_LIB_DEPENDS:STATIC=

//Dependencies for target
clangIndex_LIB_DEPENDS:STATIC=

//Dependencies for target
clangLex_LIB_DEPENDS:STATIC=

//Dependencies for target
clangParse_LIB_DEPENDS:STATIC=

//Dependencies for target
clangRewriteFrontend_LIB_DEPENDS:STATIC=

//Dependencies for target
clangRewrite_LIB_DEPENDS:STATIC=

//Dependencies for target
clangSema_LIB_DEPENDS:STATIC=

//Dependencies for target
clangSerialization_LIB_DEPENDS:STATIC=

//Dependencies for target
clangStaticAnalyzerCheckers_LIB_DEPENDS:STATIC=

//Dependencies for target
clangStaticAnalyzerCore_LIB_DEPENDS:STATIC=

//Dependencies for target
clangStaticAnalyzerFrontend_LIB_DEPENDS:STATIC=

//Dependencies for target
clangToolingCore_LIB_DEPENDS:STATIC=

//Dependencies for target
clangTooling_LIB_DEPENDS:STATIC=

//Dependencies for the target
libclang_LIB_DEPENDS:STATIC=general;clangAST;general;clangBasic;general;clangFrontend;general;clangIndex;general;clangLex;general;clangSema;general;clangTooling;general;clangARCMigrate;general;dl;general;LLVMCore;general;LLVMSupport;


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CLANG_EXECUTABLE_VERSION
CLANG_EXECUTABLE_VERSION-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/tmp/emsdk_portable/clang/fastcomp/build_master_64
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=2
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=2
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Start directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/tmp/emsdk_portable/clang/fastcomp/src
//Install .so files without execute permission.
CMAKE_INSTALL_SO_NO_EXE:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_LOCAL_GENERATORS:INTERNAL=168
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/share/cmake-3.2
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/bin/uname
//ADVANCED property for variable: CMAKE_USE_RELATIVE_PATHS
CMAKE_USE_RELATIVE_PATHS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_DEB
CPACK_BINARY_DEB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_IFW
CPACK_BINARY_IFW-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_NSIS
CPACK_BINARY_NSIS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_RPM
CPACK_BINARY_RPM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_STGZ
CPACK_BINARY_STGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TBZ2
CPACK_BINARY_TBZ2-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TGZ
CPACK_BINARY_TGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TXZ
CPACK_BINARY_TXZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TZ
CPACK_BINARY_TZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TBZ2
CPACK_SOURCE_TBZ2-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TGZ
CPACK_SOURCE_TGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TXZ
CPACK_SOURCE_TXZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TZ
CPACK_SOURCE_TZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_ZIP
CPACK_SOURCE_ZIP-ADVANCED:INTERNAL=1
//Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG
CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG:INTERNAL=
//Test CXX_SUPPORTS_CXX11
CXX_SUPPORTS_CXX11:INTERNAL=1
//Test CXX_SUPPORTS_FDATA_SECTIONS
CXX_SUPPORTS_FDATA_SECTIONS:INTERNAL=1
//Test CXX_SUPPORTS_FFUNCTION_SECTIONS
CXX_SUPPORTS_FFUNCTION_SECTIONS:INTERNAL=1
//Test CXX_SUPPORTS_FPIC
CXX_SUPPORTS_FPIC:INTERNAL=1
//Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG
CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_NO_NESTED_ANON_TYPES_FLAG
CXX_SUPPORTS_NO_NESTED_ANON_TYPES_FLAG:INTERNAL=
//Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR
CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR:INTERNAL=
//Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG
C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG:INTERNAL=
//Test C_SUPPORTS_FDATA_SECTIONS
C_SUPPORTS_FDATA_SECTIONS:INTERNAL=1
//Test C_SUPPORTS_FFUNCTION_SECTIONS
C_SUPPORTS_FFUNCTION_SECTIONS:INTERNAL=1
//Test C_SUPPORTS_FNO_FUNCTION_SECTIONS
C_SUPPORTS_FNO_FUNCTION_SECTIONS:INTERNAL=1
//Test C_SUPPORTS_FPIC
C_SUPPORTS_FPIC:INTERNAL=1
//Test C_WCOMMENT_ALLOWS_LINE_WRAP
C_WCOMMENT_ALLOWS_LINE_WRAP:INTERNAL=
//Details about finding PythonInterp
FIND_PACKAGE_MESSAGE_DETAILS_PythonInterp:INTERNAL=[/usr/bin/python2.7][v2.7.10()]
//Test HAS_MAYBE_UNINITIALIZED
HAS_MAYBE_UNINITIALIZED:INTERNAL=1
//Have symbol backtrace
HAVE_BACKTRACE:INTERNAL=1
//Have symbol closedir
HAVE_CLOSEDIR:INTERNAL=1
//Test HAVE_CXXABI_H
HAVE_CXXABI_H:INTERNAL=1
//Have symbol arc4random
HAVE_DECL_ARC4RANDOM:INTERNAL=
//Have symbol FE_ALL_EXCEPT
HAVE_DECL_FE_ALL_EXCEPT:INTERNAL=1
//Have symbol FE_INEXACT
HAVE_DECL_FE_INEXACT:INTERNAL=1
//Have symbol strerror_s
HAVE_DECL_STRERROR_S:INTERNAL=
//Have include dirent.h
HAVE_DIRENT_H:INTERNAL=1
//Have symbol dlerror
HAVE_DLERROR:INTERNAL=1
//Have include dlfcn.h
HAVE_DLFCN_H:INTERNAL=1
//Have symbol dlopen
HAVE_DLOPEN:INTERNAL=1
//Have include errno.h
HAVE_ERRNO_H:INTERNAL=1
//Have include execinfo.h
HAVE_EXECINFO_H:INTERNAL=1
//Have include fcntl.h
HAVE_FCNTL_H:INTERNAL=1
//Have include fenv.h
HAVE_FENV_H:INTERNAL=1
//Have symbol futimens
HAVE_FUTIMENS:INTERNAL=1
//Have symbol futimes
HAVE_FUTIMES:INTERNAL=1
//Have symbol getcwd
HAVE_GETCWD:INTERNAL=1
//Have symbol getpagesize
HAVE_GETPAGESIZE:INTERNAL=1
//Have symbol getrlimit
HAVE_GETRLIMIT:INTERNAL=1
//Have symbol getrusage
HAVE_GETRUSAGE:INTERNAL=1
//Have symbol gettimeofday
HAVE_GETTIMEOFDAY:INTERNAL=1
//Have include histedit.h
HAVE_HISTEDIT_H:INTERNAL=
//Test HAVE_INT64_T
HAVE_INT64_T:INTERNAL=1
//Have include inttypes.h
HAVE_INTTYPES_H:INTERNAL=1
//Have symbol isatty
HAVE_ISATTY:INTERNAL=1
//Have library atomic
HAVE_LIBATOMIC:INTERNAL=1
//Have library dl
HAVE_LIBDL:INTERNAL=1
//Have library pthread
HAVE_LIBPTHREAD:INTERNAL=1
//Have library rt
HAVE_LIBRT:INTERNAL=1
//Have library z
HAVE_LIBZ:INTERNAL=
//Have include limits.h
HAVE_LIMITS_H:INTERNAL=1
//Have include link.h
HAVE_LINK_H:INTERNAL=1
//Have include mach/mach.h
HAVE_MACH_MACH_H:INTERNAL=
//Have include mach-o/dyld.h
HAVE_MACH_O_DYLD_H:INTERNAL=
//Have symbol mallctl
HAVE_MALLCTL:INTERNAL=
//Have symbol mallinfo
HAVE_MALLINFO:INTERNAL=1
//Have include malloc.h
HAVE_MALLOC_H:INTERNAL=1
//Have include malloc/malloc.h
HAVE_MALLOC_MALLOC_H:INTERNAL=
//Have symbol malloc_zone_statistics
HAVE_MALLOC_ZONE_STATISTICS:INTERNAL=
//Have symbol mkdtemp
HAVE_MKDTEMP:INTERNAL=1
//Have symbol mkstemp
HAVE_MKSTEMP:INTERNAL=1
//Have symbol mktemp
HAVE_MKTEMP:INTERNAL=1
//Have include ndir.h
HAVE_NDIR_H:INTERNAL=
//Have symbol opendir
HAVE_OPENDIR:INTERNAL=1
//Have symbol posix_spawn
HAVE_POSIX_SPAWN:INTERNAL=1
//Have symbol pread
HAVE_PREAD:INTERNAL=1
//Have library pthread
HAVE_PTHREAD_GETSPECIFIC:INTERNAL=1
//Have include pthread.h
HAVE_PTHREAD_H:INTERNAL=1
//Have library pthread
HAVE_PTHREAD_MUTEX_LOCK:INTERNAL=1
//Have library pthread
HAVE_PTHREAD_RWLOCK_INIT:INTERNAL=1
//are srand48/lrand48/drand48 available?
HAVE_RAND48:INTERNAL=1
//Have symbol drand48
HAVE_RAND48_DRAND48:INTERNAL=1
//Have symbol lrand48
HAVE_RAND48_LRAND48:INTERNAL=1
//Have symbol srand48
HAVE_RAND48_SRAND48:INTERNAL=1
//Have symbol readdir
HAVE_READDIR:INTERNAL=1
//Have symbol realpath
HAVE_REALPATH:INTERNAL=1
//Have symbol sbrk
HAVE_SBRK:INTERNAL=1
//Have symbol setenv
HAVE_SETENV:INTERNAL=1
//Have symbol setrlimit
HAVE_SETRLIMIT:INTERNAL=1
//Have include signal.h
HAVE_SIGNAL_H:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have symbol strerror
HAVE_STRERROR:INTERNAL=1
//Have symbol strerror_r
HAVE_STRERROR_R:INTERNAL=1
//Have symbol strtoll
HAVE_STRTOLL:INTERNAL=1
//Have symbol strtoq
HAVE_STRTOQ:INTERNAL=1
//Have include sys/dir.h
HAVE_SYS_DIR_H:INTERNAL=1
//Have include sys/ioctl.h
HAVE_SYS_IOCTL_H:INTERNAL=1
//Have include sys/mman.h
HAVE_SYS_MMAN_H:INTERNAL=1
//Have include sys/ndir.h
HAVE_SYS_NDIR_H:INTERNAL=
//Have include sys/param.h
HAVE_SYS_PARAM_H:INTERNAL=1
//Have include sys/resource.h
HAVE_SYS_RESOURCE_H:INTERNAL=1
//Have include sys/stat.h
HAVE_SYS_STAT_H:INTERNAL=1
//Have include sys/time.h
HAVE_SYS_TIME_H:INTERNAL=1
//Have include sys/uio.h
HAVE_SYS_UIO_H:INTERNAL=1
//Have include sys/wait.h
HAVE_SYS_WAIT_H:INTERNAL=1
//Have library tinfo
HAVE_TERMINFO_TINFO:INTERNAL=1
//Have include termios.h
HAVE_TERMIOS_H:INTERNAL=1
//Test HAVE_UINT64_T
HAVE_UINT64_T:INTERNAL=1
//Have include unistd.h
HAVE_UNISTD_H:INTERNAL=1
//Have include utime.h
HAVE_UTIME_H:INTERNAL=1
//Test HAVE_U_INT64_T
HAVE_U_INT64_T:INTERNAL=1
//Have include valgrind/valgrind.h
HAVE_VALGRIND_VALGRIND_H:INTERNAL=
//Have symbol writev
HAVE_WRITEV:INTERNAL=1
//Have include zlib.h
HAVE_ZLIB_H:INTERNAL=
//Have function __atomic_fetch_add_4
HAVE___ATOMIC_FETCH_ADD_4:INTERNAL=
//ADVANCED property for variable: LIBCLANG_LIBRARY_VERSION
LIBCLANG_LIBRARY_VERSION-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LIBXML2_INCLUDE_DIR
LIBXML2_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LIBXML2_LIBRARIES
LIBXML2_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LIBXML2_XMLLINT_EXECUTABLE
LIBXML2_XMLLINT_EXECUTABLE-ADVANCED:INTERNAL=1
//Test LLVM_HAS_ATOMICS
LLVM_HAS_ATOMICS:INTERNAL=1
//Have symbol __GLIBC__
LLVM_USING_GLIBC:INTERNAL=1
//ADVANCED property for variable: OCAMLFIND
OCAMLFIND-ADVANCED:INTERNAL=1
PC_LIBXML_CFLAGS:INTERNAL=
PC_LIBXML_CFLAGS_I:INTERNAL=
PC_LIBXML_CFLAGS_OTHER:INTERNAL=
PC_LIBXML_FOUND:INTERNAL=
PC_LIBXML_INCLUDEDIR:INTERNAL=
PC_LIBXML_LIBDIR:INTERNAL=
PC_LIBXML_LIBS:INTERNAL=
PC_LIBXML_LIBS_L:INTERNAL=
PC_LIBXML_LIBS_OTHER:INTERNAL=
PC_LIBXML_LIBS_PATHS:INTERNAL=
PC_LIBXML_PREFIX:INTERNAL=
PC_LIBXML_STATIC_CFLAGS:INTERNAL=
PC_LIBXML_STATIC_CFLAGS_I:INTERNAL=
PC_LIBXML_STATIC_CFLAGS_OTHER:INTERNAL=
PC_LIBXML_STATIC_LIBDIR:INTERNAL=
PC_LIBXML_STATIC_LIBS:INTERNAL=
PC_LIBXML_STATIC_LIBS_L:INTERNAL=
PC_LIBXML_STATIC_LIBS_OTHER:INTERNAL=
PC_LIBXML_STATIC_LIBS_PATHS:INTERNAL=
PC_LIBXML_VERSION:INTERNAL=
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PYTHON_EXECUTABLE
PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1
//Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG
SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG:INTERNAL=1
//Test SUPPORTS_NO_VARIADIC_MACROS_FLAG
SUPPORTS_NO_VARIADIC_MACROS_FLAG:INTERNAL=1
__pkg_config_checked_PC_LIBXML:INTERNAL=1

